[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-pipeline"
version = "1.0.0"
description = "RAG Pipeline - Retrieval-Augmented Generation System"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["rag", "retrieval", "augmented", "generation", "ai", "nlp", "chatbot"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "langchain==0.3.26",
    "langchain-groq==0.3.6",
    "langchain-text-splitters==0.3.8",
    "langchain-huggingface==0.3.0",
    "chromadb==1.0.15",
    "transformers==4.53.2",
    "sentence-transformers==5.0.0",
    "torch",
    "numpy",
    "pandas",
    "pypdf2",
    "python-docx",
    "pyyaml",
    "fastapi",
    "uvicorn",
    "streamlit",
    "python-dotenv",
    "tqdm",
    "loguru",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "flake8",
    "jupyter",
]
test = [
    "pytest",
    "pytest-cov",
]

[project.urls]
Homepage = "https://github.com/yourusername/rag-pipeline"
Documentation = "https://github.com/yourusername/rag-pipeline/blob/main/README.md"
Repository = "https://github.com/yourusername/rag-pipeline"
"Bug Tracker" = "https://github.com/yourusername/rag-pipeline/issues"

[project.scripts]
rag = "main:main"
rag-pipeline = "main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-data]
"*" = ["config/*.yaml", "docs/*.md"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
] 